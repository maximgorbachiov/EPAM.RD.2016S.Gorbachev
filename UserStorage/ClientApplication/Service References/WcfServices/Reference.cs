//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApplication.WcfServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServices.IServiceContract")]
    public interface IServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddUser", ReplyAction="http://tempuri.org/IServiceContract/AddUserResponse")]
        int AddUser(StorageInterfaces.CommunicationEntities.WcfEntities.User userData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddUser", ReplyAction="http://tempuri.org/IServiceContract/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(StorageInterfaces.CommunicationEntities.WcfEntities.User userData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteUser", ReplyAction="http://tempuri.org/IServiceContract/DeleteUserResponse")]
        void DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteUser", ReplyAction="http://tempuri.org/IServiceContract/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/SearchBy", ReplyAction="http://tempuri.org/IServiceContract/SearchByResponse")]
        int[] SearchBy(StorageInterfaces.CommunicationEntities.WcfEntities.User searchingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/SearchBy", ReplyAction="http://tempuri.org/IServiceContract/SearchByResponse")]
        System.Threading.Tasks.Task<int[]> SearchByAsync(StorageInterfaces.CommunicationEntities.WcfEntities.User searchingUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceContractChannel : ClientApplication.WcfServices.IServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceContractClient : System.ServiceModel.ClientBase<ClientApplication.WcfServices.IServiceContract>, ClientApplication.WcfServices.IServiceContract {
        
        public ServiceContractClient() {
        }
        
        public ServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(StorageInterfaces.CommunicationEntities.WcfEntities.User userData) {
            return base.Channel.AddUser(userData);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(StorageInterfaces.CommunicationEntities.WcfEntities.User userData) {
            return base.Channel.AddUserAsync(userData);
        }
        
        public void DeleteUser(int id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public int[] SearchBy(StorageInterfaces.CommunicationEntities.WcfEntities.User searchingUser) {
            return base.Channel.SearchBy(searchingUser);
        }
        
        public System.Threading.Tasks.Task<int[]> SearchByAsync(StorageInterfaces.CommunicationEntities.WcfEntities.User searchingUser) {
            return base.Channel.SearchByAsync(searchingUser);
        }
    }
}
